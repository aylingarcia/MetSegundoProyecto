package visual.PanelesFinales;

import visual.VentanaPrincipal;
import visual.FactoryMethod.*;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;

import clases.*;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

import java.util.ArrayList;
import java.util.List;

public class EdicionPedido extends javax.swing.JPanel {
    private Pedido pedido;
    private PanelFactory factory;
    private VentanaPrincipal frame;
    private final int limite = 15;
    /**
     * Creates new form EdicionPedido
     */
    public EdicionPedido(Pedido p, VentanaPrincipal frame) {
        pedido = p;
        this.frame = frame;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jList1 = new javax.swing.JList<>();
        buttonTerminarPedido = new javax.swing.JButton();
        botonAgregarPlatillo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        /*ListaPlatillos<Platillo> lista = new ListaPlatillos(pedido);
        jList1.setModel(lista);
        
        AbstractListModel<Platillo> modeloLista = new AbstractListModel(){
            Platillo[] platillos = pedido.recargarPlatillos();
            public int getSize() {return platillos.length;}
            public Platillo getElementAt(int i) {
                return platillos[i];
            }
            private Platillo[] recargarPlatillos() {
                return pedido.getPlatillos(new Platillos[limite]);
            }
        };
        */

        jScrollPane1 = recargarLista();

        /*jList1.setModel(new javax.swing.AbstractListModel<Componente>() {
            Componente[] platillos = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });*/
        //jScrollPane1.setViewportView(jList1);

        buttonTerminarPedido.setText("Terminar");
        buttonTerminarPedido.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                generarFactura();
            }
        });

        botonAgregarPlatillo.setText("Agregar");
        botonAgregarPlatillo.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                // agregado de un nuevo platillo a 
            }
        });

        jLabel1.setText("Pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 212, Short.MAX_VALUE)
                        .addComponent(botonAgregarPlatillo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonTerminarPedido))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTerminarPedido)
                    .addComponent(botonAgregarPlatillo)))
        );
    }// </editor-fold>           
    private JScrollPane recargarLista() {
        List<Platillo> platillos = pedido.getPlatillos();
        
        JList lista = new JList(new Vector<Platillo>(platillos));
        
        lista.setCellRenderer(new DefaultListCellRenderer() {
            public Component getListCellRenderComponent(JList<?> lista, Object valor, int index, boolean seleccionado, boolean cellHasFocus) {
                Component renderer = super.getListCellRendererComponent(lista, valor, index, seleccionado, cellHasFocus);
                if (renderer instanceof JLabel && valor instanceof Platillo) {
                    // Here value will be of the Type 'CD'
                    ((JLabel) renderer).setText(((Platillo) valor).getTitulo());
                }
                return renderer;
            }
        });
        JScrollPane scroll = new JScrollPane(lista);
        return scroll;
    }

    private void generarFactura() {
        frame.generarFactura(pedido);
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton botonAgregarPlatillo;
    private javax.swing.JButton buttonTerminarPedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<Componente> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration       
    private class ListaPlatillos<T> extends AbstractListModel {
        private ArrayList<Platillo> listaPlatillos;
        private Pedido pedido;
        public ListaPlatillos(Pedido p) {
            pedido = p;
            recargarLista();
        }
        public int getSize() {
            return listaPlatillos.size();
        }
        public Platillo getElementAt(int i) {
            return listaPlatillos.get(i);
        }
        public void agregarPlatillo(Platillo p) {
            pedido.agregarPlatillo(p);
            recargarLista();
        }

        private void recargarLista() {
            listaPlatillos = pedido.getPlatillos();
        }
    }            
}