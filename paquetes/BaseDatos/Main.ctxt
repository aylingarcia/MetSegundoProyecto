#BlueJ class context
comment0.target=Main
comment0.text=\n\ @author\ Alexander\ James\ ALvarez\ Rojas\n
comment1.params=p
comment1.target=Main(java.lang.String)
comment10.params=fileName
comment10.target=java.util.List\ read(java.lang.String)
comment11.params=fileName
comment11.target=java.util.ArrayList\ readWFormat(java.lang.String)
comment12.params=lista\ c
comment12.target=java.util.ArrayList\ convert(java.util.List,\ java.lang.Class)
comment13.params=o
comment13.target=boolean\ verificarSerializable(java.lang.Object)
comment14.params=
comment14.target=boolean\ empty()
comment15.params=p
comment15.target=void\ setPath(java.lang.String)
comment16.params=
comment16.target=java.lang.String\ getPath()
comment2.params=
comment2.target=Main()
comment3.params=l\ eti\ fileName
comment3.target=void\ saveEstructureWithoutFormat(java.util.List,\ java.lang.String[],\ java.lang.String)
comment3.text=\n\ el\ almacenamiento\ puede\ guardar\ estrcuturas\ de\ 2\ formas\:\n\ 1.\ guardar\ un\ objeto\ \n\ 2.\ guardar\ una\ estructura\ de\ objetos,\ se\ perdera\ la\ estrcutura\ y\ se\ tendra\ que\ reconstruir\ a\ la\ hora\ de\ recuperarla.\n\ \ \ \ \ \ existen\ algunas\ complicaciones\ a\ la\ hora\ de\ realizar\ el\ almacenamiento\ \:\n\ \ \ \ \ \ 1\ si\ se\ quiere\ serializar\ la\ estructura\ la\ calse\ debe\ implementar\ Serializable\n\ \ \ \ \ \ 2\ si\ se\ quiere\ almacenar\ de\ otra\ manera\ entonces\ tenemos\ 2\ posibles\ casos\:\n\ \ \ \ \ \ \ \ \ \ las\ variables\ internas\ deben\ ser\ publicas\ para\ poder\ hacer\ las\ estructuras\ \n\ \ \ \ \ \ \ \ \ \ caso\ contrario\ es\ posible\ que\ se\ tenga\ que\ realizar\ una\ serializacion\ del\ objecto\ para\ no\ perder\ ningun\ tipo\ de\ informacion\n\ 3.\ Al\ tener\ un\ XML\ se\ tendra\ el\ siguiente\ formato\:\ Reflexion\ para\ poder\ ver\ todos\ los\ fields\ y\ poderlos\ plasmar\n\ en\ caso\ de\ que\ no\ podamos\ reconstruir\ el\ objeto\ se\ opta\ por\ serializarlo\n\ \ \ \ 4.\ guardar\ en\ un\ texto\ plano\ significa\ tener\ una\ lista\ y\ no\ exactamente\ un\ objeto\ \n\ \ \ \ de\ 'n'\ parametros\ pero\ de\ tipo\ String\ o\ tipo\ variables\ int\ boolean\ entre\ otros.\n\ \ \ \ si\ se\ diera\ un\ objeto\ la\ forma\ de\ manejarlo\ seria\ la\ misma\ a\ la\ xml\ con\ las\ restricciones\ mostradas\n\ recuperar\ una\ estructura\ nos\ devuelve\ en\ todo\ caso\ una\ estructura\ Object[]\ se\ tendra\ que\ castear\ y\ convertir\ a\ la\ estructura\ deseada\n\ pero\ si\ la\ estructura\ ingresada\ fue\ de\ tipo\ mapa\ nos\ devuelve\ una\ estructura\ de\ tipo\ ArrayList\n
comment4.params=o\ fileName
comment4.target=void\ saveEstructureXMLBeans(java.util.List,\ java.lang.String)
comment5.params=o\ fileName
comment5.target=void\ saveEstructureXML(java.lang.Object,\ java.lang.String)
comment6.params=l\ fileName
comment6.target=void\ saveEstructureSerializable(java.util.List,\ java.lang.String)
comment7.params=o\ fileName
comment7.target=void\ saveObjectWFormat(java.lang.Object,\ java.lang.String)
comment8.params=fileName\ o
comment8.target=void\ saveObjectXMLBeans(java.lang.String,\ java.lang.Object)
comment9.params=fileName\ o
comment9.target=void\ saveObjectSerializable(java.lang.String,\ java.lang.Object)
numComments=17
